{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"../styles.js\";\nimport { useRoute } from '@react-navigation/native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var username = route.params.username;\n  var _useState = useState({\n      \"Group 1\": [\"amigo1\", \"amigo2\"],\n      \"Group 2\": [\"amigo3\", \"amigo4\"],\n      \"Group 3\": [\"amigo5\", \"amigo6\"]\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    groups = _useState2[0],\n    setGroups = _useState2[1];\n  var addGroup = function addGroup(newGroup) {\n    setGroups(_objectSpread(_objectSpread({}, groups), {}, {\n      newGroup: newGroup\n    }));\n  };\n  return _jsxs(View, {\n    style: styles.containerHome,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        style: styles.profile,\n        children: [_jsx(FontAwesome, {\n          name: \"user-circle\",\n          size: 32,\n          color: \"gray\",\n          style: styles.profileIcon\n        }), _jsxs(Text, {\n          style: styles.username,\n          children: [\"Hello, \", username]\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.groupList,\n      children: groups.map(function (group, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.groupButton,\n          onPress: function onPress() {\n            return navigation.navigate('GroupDetails', {\n              groupName: group\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.groupButtonText,\n            children: group\n          })\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.createGroupButton,\n      onPress: function onPress() {\n        return navigation.navigate('CreateGroup', {\n          addGroup: addGroup\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.createGroupButtonText,\n        children: \"Criar Grupo\"\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["styles","useRoute","TouchableOpacity","FontAwesome","useState","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","route","username","params","_useState","_useState2","_slicedToArray","groups","setGroups","addGroup","newGroup","_objectSpread","View","style","containerHome","children","header","profile","name","size","color","profileIcon","Text","groupList","map","group","index","groupButton","onPress","navigate","groupName","groupButtonText","createGroupButton","createGroupButtonText"],"sources":["/home/pedromonici/USP/Oitavo_Semestre/COMP_DISTRIBUIDA/SplitWise/components/home.js"],"sourcesContent":["import { View, Text } from 'react-native';\nimport styles from '../styles.js'\nimport { useRoute } from '@react-navigation/native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useState } from 'react';\n\nconst HomeScreen = ({navigation}) => {\n    const route = useRoute();\n    const { username } = route.params;\n    const [groups, setGroups] = useState({\"Group 1\":[\"amigo1\", \"amigo2\"], \"Group 2\":[\"amigo3\", \"amigo4\"], \"Group 3\":[\"amigo5\", \"amigo6\"]});\n\n    const addGroup = (newGroup) => {\n        setGroups({...groups, newGroup});\n    };\n\n    return (\n        <View style={styles.containerHome}>\n            <View style={styles.header}>\n                <View style={styles.profile}>\n                    <FontAwesome name=\"user-circle\" size={32} color=\"gray\" style={styles.profileIcon}/>\n                    <Text style={styles.username}>Hello, {username}</Text>\n                </View>\n            </View>\n\n            <View style={styles.groupList}>\n                {groups.map((group, index) => (\n                    <TouchableOpacity\n                        key={index}\n                        style={styles.groupButton}\n                        onPress={() => navigation.navigate('GroupDetails', { groupName: group})}\n                    >\n                        <Text style={styles.groupButtonText}>{group}</Text>\n                    </TouchableOpacity>\n                ))}\n            </View>\n\n            <TouchableOpacity style={styles.createGroupButton} onPress={() => navigation.navigate('CreateGroup', {addGroup})}>\n                <Text style={styles.createGroupButtonText}>Criar Grupo</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default HomeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}