{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"../styles.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation,\n    accounts = _ref.accounts;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log(navigation);\n    if (accounts[username] === password) {\n      navigation.navigate('Home', {\n        username: username\n      });\n    } else {\n      alert('Usuario e/ou senha invalido');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"Usuario:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Senha:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), _jsx(View, {\n      style: styles.verticalSpace\n    }), _jsx(Button, {\n      title: \"Cadastrar\",\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      }\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","styles","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","accounts","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","console","log","navigate","alert","style","container","children","label","input","onChangeText","text","value","secureTextEntry","title","onPress","verticalSpace"],"sources":["/home/pedromonici/USP/Oitavo_Semestre/COMP_DISTRIBUIDA/SplitWise/components/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button } from 'react-native';\nimport styles from '../styles.js'\n\nconst LoginScreen = ({navigation, accounts}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = () => {\n        console.log(navigation)\n        if (accounts[username] === password) {\n            navigation.navigate('Home', {username});\n        } else {\n            alert('Usuario e/ou senha invalido');\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.label}>Usuario:</Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={(text) => setUsername(text)}\n                value={username}\n            />\n            <Text style={styles.label}>Senha:</Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={(text) => setPassword(text)}\n                value={password}\n                secureTextEntry={true}\n            />\n            <Button title='Login' onPress={handleLogin}/>\n            <View style={styles.verticalSpace}/>\n            <Button title='Cadastrar' onPress={() => navigation.navigate('Register')}/>\n        </View>\n    )\n};\n\nexport default LoginScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,MAAM;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAA+B;EAAA,IAA1BC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACtC,IAAAC,SAAA,GAAgCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBC,OAAO,CAACC,GAAG,CAACb,UAAU,CAAC;IACvB,IAAIC,QAAQ,CAACI,QAAQ,CAAC,KAAKI,QAAQ,EAAE;MACjCT,UAAU,CAACc,QAAQ,CAAC,MAAM,EAAE;QAACT,QAAQ,EAARA;MAAQ,CAAC,CAAC;IAC3C,CAAC,MAAM;MACHU,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ,CAAC;EAED,OACIlB,KAAA,CAACR,IAAI;IAAC2B,KAAK,EAAEvB,MAAM,CAACwB,SAAU;IAAAC,QAAA,GAC1BvB,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAEvB,MAAM,CAAC0B,KAAM;MAAAD,QAAA,EAAC;IAAQ,CAAM,CAAC,EAC1CvB,IAAA,CAACJ,SAAS;MACNyB,KAAK,EAAEvB,MAAM,CAAC2B,KAAM;MACpBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKhB,WAAW,CAACgB,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAElB;IAAS,CACnB,CAAC,EACFV,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAEvB,MAAM,CAAC0B,KAAM;MAAAD,QAAA,EAAC;IAAM,CAAM,CAAC,EACxCvB,IAAA,CAACJ,SAAS;MACNyB,KAAK,EAAEvB,MAAM,CAAC2B,KAAM;MACpBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKZ,WAAW,CAACY,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAEd,QAAS;MAChBe,eAAe,EAAE;IAAK,CACzB,CAAC,EACF7B,IAAA,CAACH,MAAM;MAACiC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEf;IAAY,CAAC,CAAC,EAC7ChB,IAAA,CAACN,IAAI;MAAC2B,KAAK,EAAEvB,MAAM,CAACkC;IAAc,CAAC,CAAC,EACpChC,IAAA,CAACH,MAAM;MAACiC,KAAK,EAAC,WAAW;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM1B,UAAU,CAACc,QAAQ,CAAC,UAAU,CAAC;MAAA;IAAC,CAAC,CAAC;EAAA,CACzE,CAAC;AAEf,CAAC;AAED,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}