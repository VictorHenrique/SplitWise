{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"../styles.js\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var username = route.params.username;\n  var groups = [\"Group 1\", \"Group 2\", \"Group 3\"];\n  var createGroup = function createGroup() {\n    navigation.navigate('CreateGroupScreen');\n  };\n  return _jsxs(View, {\n    style: styles.containerHome,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsxs(View, {\n        style: styles.profile,\n        children: [_jsx(FontAwesome, {\n          name: \"user-circle\",\n          size: 32,\n          color: \"gray\",\n          style: styles.profileIcon\n        }), _jsxs(Text, {\n          style: styles.username,\n          children: [\"Hello, \", username]\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.groupList,\n      children: groups.map(function (group, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.groupButton,\n          onPress: function onPress() {\n            return navigation.navigate('GroupDetails', {\n              groupName: group\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.groupButtonText,\n            children: group\n          })\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.createGroupButton,\n      onPress: (function () {\n        return navigation.navigate('CreateGroupScreen');\n      }, {\n        addGroup: addGroup\n      }),\n      children: _jsx(Text, {\n        style: styles.createGroupButtonText,\n        children: \"Criar Grupo\"\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["styles","useNavigation","useRoute","TouchableOpacity","FontAwesome","jsx","_jsx","jsxs","_jsxs","HomeScreen","navigation","route","username","params","groups","createGroup","navigate","View","style","containerHome","children","header","profile","name","size","color","profileIcon","Text","groupList","map","group","index","groupButton","onPress","groupName","groupButtonText","createGroupButton","addGroup","createGroupButtonText"],"sources":["/home/pedromonici/USP/Oitavo_Semestre/COMP_DISTRIBUIDA/SplitWise/components/home.js"],"sourcesContent":["import { View, Text } from 'react-native';\nimport styles from '../styles.js'\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\n\nconst HomeScreen = () => {\n    const navigation = useNavigation()\n    const route = useRoute();\n    const { username } = route.params;\n    const groups = [\"Group 1\", \"Group 2\", \"Group 3\"]\n\n    const createGroup = () => {\n        navigation.navigate('CreateGroupScreen')\n    }\n\n    return (\n        <View style={styles.containerHome}>\n            <View style={styles.header}>\n                <View style={styles.profile}>\n                    <FontAwesome name=\"user-circle\" size={32} color=\"gray\" style={styles.profileIcon}/>\n                    <Text style={styles.username}>Hello, {username}</Text>\n                </View>\n            </View>\n\n            <View style={styles.groupList}>\n                {groups.map((group, index) => (\n                    <TouchableOpacity\n                        key={index}\n                        style={styles.groupButton}\n                        onPress={() => navigation.navigate('GroupDetails', { groupName: group})}\n                    >\n                        <Text style={styles.groupButtonText}>{group}</Text>\n                    </TouchableOpacity>\n                ))}\n            </View>\n\n            <TouchableOpacity style={styles.createGroupButton} onPress={() => navigation.navigate('CreateGroupScreen'), {addGroup}}>\n                <Text style={styles.createGroupButtonText}>Criar Grupo</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default HomeScreen;\n"],"mappings":";;AACA,OAAOA,MAAM;AACb,SAASC,aAAa,EAAEC,QAAQ,QAAQ,0BAA0B;AAClE,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAMC,UAAU,GAAGT,aAAa,CAAC,CAAC;EAClC,IAAMU,KAAK,GAAGT,QAAQ,CAAC,CAAC;EACxB,IAAQU,QAAQ,GAAKD,KAAK,CAACE,MAAM,CAAzBD,QAAQ;EAChB,IAAME,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEhD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBL,UAAU,CAACM,QAAQ,CAAC,mBAAmB,CAAC;EAC5C,CAAC;EAED,OACIR,KAAA,CAACS,IAAI;IAACC,KAAK,EAAElB,MAAM,CAACmB,aAAc;IAAAC,QAAA,GAC9Bd,IAAA,CAACW,IAAI;MAACC,KAAK,EAAElB,MAAM,CAACqB,MAAO;MAAAD,QAAA,EACvBZ,KAAA,CAACS,IAAI;QAACC,KAAK,EAAElB,MAAM,CAACsB,OAAQ;QAAAF,QAAA,GACxBd,IAAA,CAACF,WAAW;UAACmB,IAAI,EAAC,aAAa;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC,MAAM;UAACP,KAAK,EAAElB,MAAM,CAAC0B;QAAY,CAAC,CAAC,EACnFlB,KAAA,CAACmB,IAAI;UAACT,KAAK,EAAElB,MAAM,CAACY,QAAS;UAAAQ,QAAA,GAAC,SAAO,EAACR,QAAQ;QAAA,CAAO,CAAC;MAAA,CACpD;IAAC,CACL,CAAC,EAEPN,IAAA,CAACW,IAAI;MAACC,KAAK,EAAElB,MAAM,CAAC4B,SAAU;MAAAR,QAAA,EACzBN,MAAM,CAACe,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;QAAA,OACrBzB,IAAA,CAACH,gBAAgB;UAEbe,KAAK,EAAElB,MAAM,CAACgC,WAAY;UAC1BC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMvB,UAAU,CAACM,QAAQ,CAAC,cAAc,EAAE;cAAEkB,SAAS,EAAEJ;YAAK,CAAC,CAAC;UAAA,CAAC;UAAAV,QAAA,EAExEd,IAAA,CAACqB,IAAI;YAACT,KAAK,EAAElB,MAAM,CAACmC,eAAgB;YAAAf,QAAA,EAAEU;UAAK,CAAO;QAAC,GAJ9CC,KAKS,CAAC;MAAA,CACtB;IAAC,CACA,CAAC,EAEPzB,IAAA,CAACH,gBAAgB;MAACe,KAAK,EAAElB,MAAM,CAACoC,iBAAkB;MAACH,OAAO,GAAE;QAAA,OAAMvB,UAAU,CAACM,QAAQ,CAAC,mBAAmB,CAAC;MAAA,GAAE;QAACqB,QAAQ,EAARA;MAAQ,CAAC,CAAC;MAAAjB,QAAA,EACnHd,IAAA,CAACqB,IAAI;QAACT,KAAK,EAAElB,MAAM,CAACsC,qBAAsB;QAAAlB,QAAA,EAAC;MAAW,CAAM;IAAC,CAC/C,CAAC;EAAA,CACjB,CAAC;AAEf,CAAC;AAED,eAAeX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}